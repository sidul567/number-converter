{"version":3,"sources":["logo.svg","Component/MainIndex.js","App.js","reportWebVitals.js","index.js"],"names":["MainIndex","props","Reset","setState","binary","decimal","hexadecimal","octal","ResetText","binaryarr","textArr","decimalArr","state","invalidBinary","checkValid","handleChangeDecimal","bind","handleChangeBinary","handleChangeOctal","handleChangeHexadecimal","textToBinary","binaryToText","decimalToBinary","e","value","target","parseInt","toString","this","text","val","charCodeArray","i","push","charCodeAt","binaryArray","map","char","decimalArray","ch","join","codeArray","splitIt","split","String","fromCharCode","j","concat","console","log","className","id","type","placeholder","onChange","onClick","name","cols","rows","style","color","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2cdae83.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport './reset.css'\r\nimport './style.css'\r\nclass MainIndex extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n         decimal:0,\r\n         octal:0,\r\n         binary:0,\r\n         hexadecimal:0,\r\n         binaryarr:[],\r\n         textArr:[],\r\n         decimalArr:[],\r\n         invalidBinary:false,\r\n         checkValid:''\r\n        };\r\n        this.handleChangeDecimal = this.handleChangeDecimal.bind(this)\r\n        this.handleChangeBinary = this.handleChangeBinary.bind(this)\r\n        this.handleChangeOctal = this.handleChangeOctal.bind(this)\r\n        this.handleChangeHexadecimal = this.handleChangeHexadecimal.bind(this)\r\n        this.textToBinary = this.textToBinary.bind(this)\r\n        this.binaryToText = this.binaryToText.bind(this)\r\n        this.decimalToBinary = this.decimalToBinary.bind(this)\r\n    }\r\n    handleChangeDecimal(e){\r\n       var value = e.target.value\r\n       var decimal = parseInt(value) || 0\r\n       var binary = decimal.toString(2)\r\n       var octal = decimal.toString(8)\r\n       var hexadecimal = decimal.toString(16)\r\n       this.setState({decimal:decimal,octal:octal,binary:binary,hexadecimal:hexadecimal})\r\n    }\r\n \r\n    handleChangeBinary(e){\r\n     var value = e.target.value\r\n     var decimal = parseInt(value,2)||0\r\n     var binary = decimal.toString(2)\r\n     var octal = decimal.toString(8)\r\n     var hexadecimal = decimal.toString(16)\r\n     this.setState({decimal:decimal,octal:octal,binary:binary,hexadecimal:hexadecimal})\r\n    }\r\n \r\n    handleChangeOctal(e){\r\n     var value = e.target.value\r\n     var decimal = parseInt(value,8)||0\r\n     var binary = decimal.toString(2)\r\n     var octal = decimal.toString(8)\r\n     var hexadecimal = decimal.toString(16)  \r\n     this.setState({decimal:decimal,octal:octal,binary:binary,hexadecimal:hexadecimal})\r\n    }\r\n \r\n    handleChangeHexadecimal(e){\r\n     var value = e.target.value\r\n     var decimal = parseInt(value,16)||0\r\n     var binary = decimal.toString(2)\r\n     var octal = decimal.toString(8)\r\n     var hexadecimal = decimal.toString(16)  \r\n     this.setState({decimal:decimal,octal:octal,binary:binary,hexadecimal:hexadecimal})\r\n    }\r\n\r\n    Reset = ()=>{\r\n        this.setState({binary:0,decimal:0,hexadecimal:0,octal:0})\r\n    }\r\n\r\n    textToBinary(text){\r\n        const val = text.target.value;\r\n        this.setState({textArr:val});\r\n        const charCodeArray = [];\r\n        for(let i in val){\r\n            charCodeArray.push(val.charCodeAt(i))\r\n        }\r\n        var binaryArray = charCodeArray.map(char=>{\r\n            return char.toString(2);\r\n        })\r\n        var decimalArray = charCodeArray.map(ch=>{\r\n            return ch;\r\n        })\r\n        binaryArray = binaryArray.join(' ')\r\n        decimalArray = decimalArray.join(' ')\r\n        this.setState({binaryarr:binaryArray,decimalArr:decimalArray})\r\n        return {binaryArray,decimalArray};\r\n    }\r\n\r\n    binaryToText(codeArray){\r\n        const val = codeArray.target.value;\r\n        this.setState({binaryarr:val});\r\n        var text = \"\";\r\n        var splitIt = val.split(' ');\r\n        for(let i of splitIt){\r\n            const ch = String.fromCharCode(parseInt(i,2));\r\n            text = text.concat(ch);\r\n            for(let j in val){\r\n                if(val[j]!=1 && val[j]!=0 && val[j]!=' '){\r\n                    console.log(val[j])\r\n                    this.setState({checkValid:'Invalid Input'});\r\n                }else{\r\n                    this.setState({checkValid:''});\r\n                }\r\n            }\r\n        }\r\n        var decimalArray = splitIt.map(ch=>{\r\n            return (parseInt(ch,2)||'');\r\n        })\r\n        decimalArray = decimalArray.join(' ');\r\n        this.setState({textArr:text,decimalArr:decimalArray})\r\n        return text;\r\n    }\r\n\r\n    decimalToBinary(codeArray){\r\n        const val = codeArray.target.value;\r\n        this.setState({decimalArr:val});\r\n        var text = \" \"\r\n        var splitIt = val.split(' ');\r\n        for(let i of splitIt){\r\n            var ch = String.fromCharCode(parseInt(i));\r\n            if(ch<' ' && ch!='\\n'){\r\n                ch = '';\r\n            }\r\n            text = text.concat(ch);\r\n            for(let j in splitIt){\r\n                console.log(splitIt[j])\r\n                if((splitIt[j]<32) && splitIt[j]!=32 && splitIt[i]!=' '){\r\n                    console.log(val[j])\r\n                    this.setState({checkValid:'Invalid Input'});\r\n                    // this.setState({textArr:[]})\r\n\r\n                }else{\r\n                    this.setState({checkValid:''});\r\n                }\r\n            }\r\n        }\r\n        var binaryArray = splitIt.map(ch=>{\r\n            var value = parseInt(ch)||'';\r\n            var bin = value.toString(2);\r\n            return bin;\r\n        })\r\n        binaryArray = binaryArray.join(' ')\r\n        this.setState({textArr:text,binaryarr:binaryArray})\r\n        return text;\r\n    }\r\n\r\n    ResetText = ()=>{\r\n        this.setState({binaryarr:[],textArr:[],decimalArr:[]})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"container\">\r\n        {/* <!-- header section --> */}\r\n        <header>\r\n            <h1 id=\"title\">Number Converter</h1>\r\n        </header>\r\n        {/* <!-- main section --> */}\r\n        <main id=\"main\">\r\n            {/* <!-- number system --> */}\r\n            <section id=\"number-system\">\r\n                <h2>Number System Conversations</h2>\r\n                <div className=\"box\">\r\n                    <div className=\"input-group\">\r\n                        <label>Decimal</label>\r\n                        <input type=\"text\" placeholder=\"Input any decimal number , eg: 123456\" value={this.state.decimal} onChange={this.handleChangeDecimal}/>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <label>Binary</label>\r\n                        <input type=\"text\" placeholder=\"Input any Binary number , eg: 101010\" value={this.state.binary} onChange={this.handleChangeBinary}/>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <label>Octal</label>\r\n                        <input type=\"text\" placeholder=\"Input any Octal number , eg: 765432\" value={this.state.octal} onChange={this.handleChangeOctal}/>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <label>Hexadecimal</label>\r\n                        <input type=\"text\" placeholder=\"Input any Hexadecimal number , eg: AB12CD\" value={this.state.hexadecimal} onChange={this.handleChangeHexadecimal}/>\r\n                    </div>\r\n                    <div className=\"reset-button\">\r\n                        <button onClick={this.Reset}>Reset</button>\r\n                    </div>\r\n                    <div className=\"one-rem-space\"></div>\r\n                </div>\r\n            </section>\r\n            {/* <!-- text section --> */}\r\n            <section id=\"text-conversion\">\r\n                <h2>Text Conversations</h2>\r\n                <div className=\"box\">\r\n                    <div className=\"input-group\">\r\n                        <label>Enter your text below:</label>\r\n                        <textarea name=\"text-decimal\" id=\"\" cols=\"30\" rows=\"10\" value={this.state.textArr} onChange={this.textToBinary}/>\r\n                    </div>\r\n                    <div className=\"half-rem-space\"></div>\r\n                    <div className=\"input-group\">\r\n                        <label>Enter your Decimal below:</label>\r\n                        <textarea name=\"text-decimal\" id=\"\" cols=\"30\" rows=\"10\" value={this.state.decimalArr} onChange={this.decimalToBinary}/>\r\n                    </div>\r\n                    <div className=\"half-rem-space\"></div>\r\n                    <div className=\"input-group\">\r\n                        <label>Enter your Binary below:</label>\r\n                        <textarea name=\"Binary-decimal\" id=\"\" cols=\"30\" rows=\"10\" value={this.state.binaryarr} onChange={this.binaryToText}/>\r\n                    </div>\r\n                    <div className=\"reset-button\">\r\n                        <p style={{color:\"red\"}}>{this.state.checkValid}</p>\r\n                        <button onClick={this.ResetText}>Reset</button>\r\n                    </div>\r\n                    <div className=\"one-rem-space\"></div>\r\n                </div>\r\n            </section>\r\n        </main>\r\n    </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainIndex;","import logo from './logo.svg';\n// import './App.css';\nimport MainIndex from './Component/MainIndex';\nfunction App() {\n  return (\n      <MainIndex/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}